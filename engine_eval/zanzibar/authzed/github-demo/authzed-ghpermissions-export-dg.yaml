schema: |-
  definition user {}

    definition team {
      // relation organization: organization changed to line below to nestbe able to nest teams into other teams
      relation parent: organization | team
      relation maintainer: user
      relation direct_member: user

      permission member = maintainer + direct_member

      // same name as in organization to allow polymorphism
  	  permission change_team_name = maintainer + parent->change_team_name
    }

    definition organization {
      relation owner: user
      relation member: user
      relation billing_manager: user
      relation team_maintainer: user

      // Repository control plane
      permission create_repository = owner + member

      // Org settings
      permission manage_billing = owner + billing_manager

  	  // Team permissions
  	  permission change_team_name = team_maintainer + owner
    }

    definition repository {
    	relation organization: organization

    	// Repository roles
    	relation maintainer: user | team#member
    	relation reader: user | team#member
    	relation writer: user | team#member
    	relation triager: user | team#member
    	relation admin: user | team#member

    	// Git actions
    	permission clone = reader + triager + push
    	permission push = writer + maintainer + admin + organization->owner

    	// Web actions
    	permission read = reader + triager + writer + maintainer + admin + organization->owner
    	permission delete_repository = admin + organization->owner

    	// Issues
    	permission create_issue = read
    	permission close_issue = triager + writer + maintainer + admin + organization->owner

    	// Pull requests
    	permission create_pr = read
    	permission merge_pr = maintainer + organization->owner
    	permission close_pr = triager + writer + maintainer + admin + organization->owner

    	// Coarse grained
    	permission manage_setting = maintainer + admin + organization->owner
    	permission manage_sensitive_setting = admin + organization->owner
    	permission manage_billing = admin + organization->owner
    }
relationships: |+
  repository:authz_experiments#organization@organization:redhat#...
  repository:authz_experiments#reader@user:dominik#...
  repository:authz_experiments#admin@user:raj#...
  repository:authz_experiments#triager@user:mark#...
  repository:authz_experiments#triager@team:authzX#member

  organization:redhat#owner@user:dominik#...
  organization:redhat#owner@user:raj#...

  team:authzX#maintainer@user:alec#...
  team:authzX#direct_member@user:abhishek#...
  team:authzX#direct_member@user:will#...
  team:authzX#parent@organization:redhat#...

  //nested subteam with parent authzX - maintainers are inherited for change_team_name bc permissions are named same at org and team level. polymorphic
  team:authzx_supportengineers#direct_member@user:ivan#...
  team:authzx_supportengineers#parent@team:authzX#...

assertions:
  assertTrue:
    - repository:authz_experiments#clone@user:dominik
  assertFalse: null
validation:
  organization:redhat#manage_billing:
    - "[user:dominik] is <organization:redhat#owner>"
    - "[user:raj] is <organization:redhat#owner>"
  repository:authz_experiments#clone:
    - "[team:authzX#member] is <repository:authz_experiments#triager>"
    - "[user:abhishek] is <team:authzX#direct_member>"
    - "[user:alec] is <team:authzX#maintainer>"
    - "[user:dominik] is <organization:redhat#owner>/<repository:authz_experiments#reader>"
    - "[user:mark] is <repository:authz_experiments#triager>"
    - "[user:raj] is <organization:redhat#owner>/<repository:authz_experiments#admin>"
    - "[user:will] is <team:authzX#direct_member>"
  repository:authz_experiments#close_issue:
    - "[team:authzX#member] is <repository:authz_experiments#triager>"
    - "[user:abhishek] is <team:authzX#direct_member>"
    - "[user:alec] is <team:authzX#maintainer>"
    - "[user:dominik] is <organization:redhat#owner>"
    - "[user:mark] is <repository:authz_experiments#triager>"
    - "[user:raj] is <organization:redhat#owner>/<repository:authz_experiments#admin>"
    - "[user:will] is <team:authzX#direct_member>"
  repository:authz_experiments#close_pr:
    - "[team:authzX#member] is <repository:authz_experiments#triager>"
    - "[user:abhishek] is <team:authzX#direct_member>"
    - "[user:alec] is <team:authzX#maintainer>"
    - "[user:dominik] is <organization:redhat#owner>"
    - "[user:mark] is <repository:authz_experiments#triager>"
    - "[user:raj] is <organization:redhat#owner>/<repository:authz_experiments#admin>"
    - "[user:will] is <team:authzX#direct_member>"
  repository:authz_experiments#create_pr:
    - "[team:authzX#member] is <repository:authz_experiments#triager>"
    - "[user:abhishek] is <team:authzX#direct_member>"
    - "[user:alec] is <team:authzX#maintainer>"
    - "[user:dominik] is <organization:redhat#owner>/<repository:authz_experiments#reader>"
    - "[user:mark] is <repository:authz_experiments#triager>"
    - "[user:raj] is <organization:redhat#owner>/<repository:authz_experiments#admin>"
    - "[user:will] is <team:authzX#direct_member>"
  repository:authz_experiments#push:
    - "[user:dominik] is <organization:redhat#owner>"
    - "[user:raj] is <organization:redhat#owner>/<repository:authz_experiments#admin>"
  team:authzX#change_team_name:
    - "[user:alec] is <team:authzX#maintainer>"
    - "[user:dominik] is <organization:redhat#owner>"
    - "[user:raj] is <organization:redhat#owner>"
  team:authzx_supportengineers#change_team_name:
    - "[user:alec] is <team:authzX#maintainer>"
    - "[user:dominik] is <organization:redhat#owner>"
    - "[user:raj] is <organization:redhat#owner>"
